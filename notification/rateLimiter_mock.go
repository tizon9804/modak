// Code generated by mockery v2.43.0. DO NOT EDIT.

package notification

import mock "github.com/stretchr/testify/mock"

// MockRateLimiter is an autogenerated mock type for the RateLimiter type
type MockRateLimiter struct {
	mock.Mock
}

// ValidateRateLimit provides a mock function with given fields: userID, typeMessage
func (_m *MockRateLimiter) ValidateRateLimit(userID User, typeMessage TypeMessage) bool {
	ret := _m.Called(userID, typeMessage)

	if len(ret) == 0 {
		panic("no return value specified for ValidateRateLimit")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(User, TypeMessage) bool); ok {
		r0 = rf(userID, typeMessage)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewMockRateLimiter creates a new instance of MockRateLimiter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRateLimiter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRateLimiter {
	mock := &MockRateLimiter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
